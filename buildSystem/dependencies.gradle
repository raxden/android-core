// Top-level build file where you can add configuration options common to all sub-projects/modules.

def versions = [:]

versions.android_gradle_plugin = '3.4.1'
versions.google_services = '4.2.0'
versions.fabric_tools = '1.28.1'
versions.kotlin = "1.3.41"
versions.contraint_layout = '1.1.3'
versions.material = '1.1.0-alpha05'
versions.rx_android = '2.1.1'           // https://github.com/ReactiveX/RxAndroid
versions.rx_kotlin = '2.3.0'            // https://github.com/ReactiveX/RxKotlin
versions.rx_permissions = '0.10.2'      // https://github.com/tbruyelle/RxPermissions
versions.room  = '2.1.0-beta01'         // https://developer.android.com/jetpack/androidx/releases/room
versions.threeten = '1.2.0'             // https://github.com/JakeWharton/ThreeTenABP
versions.timber = '4.7.1'               // https://github.com/JakeWharton/timber
versions.crashlytics = '2.10.1'         // https://fabric.io/kits/android/crashlytics/install
versions.gson = '2.8.5'                 // https://github.com/google/gson
versions.dagger = '2.22.1'              // https://github.com/google/dagger
versions.glide = '4.9.0'                // https://github.com/bumptech/glide
versions.okhttp = '3.12.0'              // https://github.com/square/okhttp
versions.retrofit = '2.5.0'             // https://github.com/square/retrofit
versions.atsl_runner = '1.1.1'
versions.atsl_rules = '1.1.1'
versions.atsl_junit = '1.1.0'
versions.espresso = '3.1.1'
versions.junit = '4.12'
versions.assertj = '1.7.0'
versions.mockito = '2.27.0'
versions.robolectric = '4.2.1'
versions.arch = '1.1.1'

ext.versions = versions

ext {

    def support = [
            material        : [group: 'com.google.android.material', name: 'material', version: versions.material],
            constraintLayout: [group: 'androidx.constraintlayout', name: 'constraintlayout', version: versions.contraint_layout]
    ]

    def kotlinLibs = [
            core: [group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk7', version: versions.kotlin],
            test: [group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: versions.kotlin]
    ]

    def playServicesLibs = [
            location: [group: 'com.google.android.gms', name: 'play-services-location', version: '16.0.0']
    ]

    def firebaseLibs = [
            core     : [group: 'com.google.firebase', name: 'firebase-core', version: '16.0.6'],
            analytics: [group: 'com.google.firebase', name: 'firebase-analytics', version: '16.0.5'],
            messaging: [group: 'com.google.firebase', name: 'firebase-messaging', version: '17.3.4']
    ]

    def daggerLibs = [
            androidSupport  : [group: 'com.google.dagger', name: 'dagger-android-support', version: versions.dagger],
            compiler        : [group: 'com.google.dagger', name: 'dagger-compiler', version: versions.dagger],
            androidProcessor: [group: 'com.google.dagger', name: 'dagger-android-processor', version: versions.dagger]
    ]

    def roomLibs = [
            runtime : [group: 'androidx.room', name: 'room-runtime', version: versions.room],
            compiler: [group: 'androidx.room', name: 'room-compiler', version: versions.room],
            rxjava2 : [group: 'androidx.room', name: 'room-rxjava2', version: versions.room],
            test    : [group: 'androidx.room', name: 'room-testing', version: versions.room]
    ]

    def rxLibs = [
            android: [group: 'io.reactivex.rxjava2', name: 'rxandroid', version: versions.rx_android],
            kotlin : [group: 'io.reactivex.rxjava2', name: 'rxkotlin', version: versions.rx_kotlin]
    ]

    def retrofitLibs = [
            core            : [group: 'com.squareup.retrofit2', name: 'retrofit', version: versions.retrofit],
            rx              : [group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: versions.retrofit],
            converterGson   : [group: 'com.squareup.retrofit2', name: 'converter-gson', version: versions.retrofit],
            converterScalars: [group: 'com.squareup.retrofit2', name: 'converter-scalars', version: versions.retrofit],
            mock            : [group: 'com.squareup.retrofit2', name: 'retrofit-mock', version: versions.retrofit]
    ]

    def okHttpLibs = [
            core              : [group: 'com.squareup.okhttp3', name: 'okhttp', version: versions.okhttp],
            loggingInterceptor: [group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: versions.okhttp],
            mockWebServer     : [group: 'com.squareup.okhttp3', name: 'mockwebserver', version: versions.okhttp],
    ]

    def glideLibs = [
            core    : [group: 'com.github.bumptech.glide', name: 'glide', version: versions.glide],
            compiler: [group: 'com.github.bumptech.glide', name: 'compiler', version: versions.glide]
    ]

    def libs = [
            gson         : [group: 'com.google.code.gson', name: 'gson', version: versions.gson],
            timber       : [group: 'com.jakewharton.timber', name: 'timber', version: versions.timber],
            threetenabp  : [group: 'com.jakewharton.threetenabp', name: 'threetenabp', version: versions.threeten],
            rxPermissions: [group: 'com.github.tbruyelle', name: 'rxpermissions', version: versions.rx_permissions],
            crashlytics  : [group: 'com.crashlytics.sdk.android', name: 'crashlytics', version: versions.crashlytics, ext: 'aar']
    ]

    def robolectricLibs = [
            core    : [group: 'org.robolectric', name: 'robolectric', version: versions.robolectric],
            multidex: [group: 'org.robolectric', name: 'shadows-multidex', version: versions.robolectric]
    ]

    def mockitoLibs = [
            core   : [group: 'org.mockito', name: 'mockito-core', version: versions.mockito],
            android: [group: 'org.mockito', name: 'mockito-android', version: versions.mockito]
    ]

    def atslLibs = [
            runner: [group: 'androidx.test', name: 'runner', version: versions.atsl_runner],
            rules : [group: 'androidx.test', name: 'rules', version: versions.atsl_rules],
            junit : [group: 'androidx.test.ext', name: 'junit', version: versions.atsl_junit]
    ]

    def espressoLibs = [
            core   : [group: 'androidx.test.espresso', name: 'espresso-core', version: versions.espresso],
            contrib: [group: 'androidx.test.espresso', name: 'espresso-contrib', version: versions.espresso],
            intents: [group: 'androidx.test.espresso', name: 'espresso-intents', version: versions.espresso],
    ]

    def testLibs = [
            junit  : [group: 'junit', name: 'junit', version: versions.junit],
            assertj: [group: 'org.assertj', name: 'assertj-core', version: versions.assertj],
            arch   : [group: 'android.arch.core', name: 'core-testing', version: versions.arch]
    ]

    // ========== MODULES DEPENDENCIES =============================================================

    def modules = [
            app    : ':app',
            data   : ':data',
            domain : ':domain',
            commons: ':commons'
    ]

    appDependencies = [
            [configuration: "implementation", dependency: project(modules.commons)],
            [configuration: "implementation", dependency: project(modules.domain)],
            [configuration: "implementation", dependency: project(modules.data)],

            [configuration: "implementation", dependency: support.material],
            [configuration: "implementation", dependency: support.constraintLayout],
            [configuration: "implementation", dependency: kotlinLibs.core],
            [configuration: "implementation", dependency: playServicesLibs.location],
            [configuration: "implementation", dependency: firebaseLibs.core],
            [configuration: "implementation", dependency: firebaseLibs.analytics],
            [configuration: "implementation", dependency: firebaseLibs.messaging],
            [configuration: "implementation", dependency: daggerLibs.androidSupport],
            [configuration: "kapt", dependency: daggerLibs.compiler],
            [configuration: "kapt", dependency: daggerLibs.androidProcessor],
            [configuration: "implementation", dependency: rxLibs.android],
            [configuration: "implementation", dependency: rxLibs.kotlin],
            [configuration: "implementation", dependency: retrofitLibs.core],
            [configuration: "implementation", dependency: retrofitLibs.rx],
            [configuration: "implementation", dependency: retrofitLibs.converterGson],
            [configuration: "implementation", dependency: retrofitLibs.converterScalars],
            [configuration: "implementation", dependency: okHttpLibs.core],
            [configuration: "implementation", dependency: okHttpLibs.loggingInterceptor],
            [configuration: "implementation", dependency: roomLibs.runtime],
            [configuration: "kapt", dependency: roomLibs.compiler],
            [configuration: "implementation", dependency: roomLibs.rxjava2],
            [configuration: "implementation", dependency: glideLibs.core],
            [configuration: "kapt", dependency: glideLibs.compiler],
            [configuration: "implementation", dependency: libs.gson],
            [configuration: "implementation", dependency: libs.threetenabp],
            [configuration: "implementation", dependency: libs.timber],
            [configuration: "implementation", dependency: libs.rxPermissions],
            [configuration: "implementation", dependency: libs.crashlytics, options: {
                transitive = true
            }],

            [configuration: "androidTestImplementation", dependency: atslLibs.runner],
            [configuration: "androidTestImplementation", dependency: atslLibs.rules],
            [configuration: "androidTestImplementation", dependency: atslLibs.junit],
            [configuration: "androidTestImplementation", dependency: espressoLibs.core],
            [configuration: "androidTestImplementation", dependency: espressoLibs.contrib],
            [configuration: "androidTestImplementation", dependency: espressoLibs.intents],
            [configuration: "androidTestImplementation", dependency: mockitoLibs.core],
            [configuration: "androidTestImplementation", dependency: mockitoLibs.android],

            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: testLibs.arch],
            [configuration: "testImplementation", dependency: kotlinLibs.test],
            [configuration: "testImplementation", dependency: mockitoLibs.core],
            [configuration: "testImplementation", dependency: robolectricLibs.core],
            [configuration: "testImplementation", dependency: robolectricLibs.multidex],
            [configuration: "kaptTest", dependency: daggerLibs.compiler]
    ]

    domainDependencies = [
            [configuration: "implementation", dependency: project(modules.commons)],

            [configuration: "implementation", dependency: kotlinLibs.core],
            [configuration: "implementation", dependency: daggerLibs.androidSupport],
            [configuration: "kapt", dependency: daggerLibs.compiler],
            [configuration: "kapt", dependency: daggerLibs.androidProcessor],
            [configuration: "implementation", dependency: libs.threetenabp],
            [configuration: "implementation", dependency: libs.timber],
            [configuration: "implementation", dependency: rxLibs.android],
            [configuration: "implementation", dependency: rxLibs.kotlin],
            [configuration: "implementation", dependency: roomLibs.runtime],
            [configuration: "kapt", dependency: roomLibs.compiler],
            [configuration: "implementation", dependency: roomLibs.rxjava2],

            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: kotlinLibs.test],
            [configuration: "testImplementation", dependency: mockitoLibs.core],
            [configuration: "testImplementation", dependency: robolectricLibs.core],
            [configuration: "testImplementation", dependency: robolectricLibs.multidex]
    ]

    dataDependencies = [
            [configuration: "implementation", dependency: project(modules.commons)],
            [configuration: "implementation", dependency: project(modules.domain)],

            [configuration: "implementation", dependency: kotlinLibs.core],
            [configuration: "implementation", dependency: daggerLibs.androidSupport],
            [configuration: "kapt", dependency: daggerLibs.compiler],
            [configuration: "kapt", dependency: daggerLibs.androidProcessor],
            [configuration: "implementation", dependency: libs.gson],
            [configuration: "implementation", dependency: libs.threetenabp],
            [configuration: "implementation", dependency: libs.timber],
            [configuration: "implementation", dependency: rxLibs.android],
            [configuration: "implementation", dependency: rxLibs.kotlin],
            [configuration: "implementation", dependency: retrofitLibs.core],
            [configuration: "implementation", dependency: retrofitLibs.rx],
            [configuration: "implementation", dependency: retrofitLibs.converterGson],
            [configuration: "implementation", dependency: retrofitLibs.converterScalars],
            [configuration: "implementation", dependency: okHttpLibs.core],
            [configuration: "implementation", dependency: okHttpLibs.loggingInterceptor],
            [configuration: "implementation", dependency: roomLibs.runtime],
            [configuration: "kapt", dependency: roomLibs.compiler],
            [configuration: "implementation", dependency: roomLibs.rxjava2],

            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: kotlinLibs.test],
            [configuration: "testImplementation", dependency: retrofitLibs.mock],
            [configuration: "testImplementation", dependency: okHttpLibs.mockWebServer],
            [configuration: "testImplementation", dependency: mockitoLibs.core],
            [configuration: "testImplementation", dependency: robolectricLibs.core],
            [configuration: "testImplementation", dependency: robolectricLibs.multidex]
    ]

    commonsDependencies = [
            [configuration: "implementation", dependency: support.material],
            [configuration: "implementation", dependency: kotlinLibs.core],
            [configuration: "implementation", dependency: rxLibs.android],
            [configuration: "implementation", dependency: rxLibs.kotlin],
            [configuration: "implementation", dependency: libs.gson],
            [configuration: "implementation", dependency: libs.threetenabp],
            [configuration: "implementation", dependency: libs.timber],
            [configuration: "implementation", dependency: glideLibs.core],
            [configuration: "implementation", dependency: mockitoLibs.core]
    ]
}
